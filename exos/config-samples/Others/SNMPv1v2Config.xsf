enable cli scripting

# @METADATASTART
#@DetailDescriptionStart
#############################################################################
#
# Script        : SNMPv1v2Config
# Revision      : 1.0
# Last Updated  : Feburary 29, 2008
#
# Purpose:  This script provides an example of SNMP V1/V2 configuration for
#           an ExtremeXOS(TM) switch.  In this example:
#
#           1.  SNMP v1/v2 access is configured
#           2.  SNMP switch name, location, and contact is created
#           3.  Optionally, trap receivers are created 
#           4.  Optionally tailored read/write community strings are created
#           5.  Optionally, standard read/write community strings are removed
#     
#           Inversely, this script can be used to disable SNMP v1/V2 access.
#
#############################################################################
#@DetailDescriptionEnd


############################################################################# 
# SNMP v1/v2 Variable definitions
#############################################################################


set var clierrormode $READ("If this script encounters errors, do you wish to abort or ignore?")


set var ynsnmpconfig $READ(Congifigure SNMP v1/v2 access? yes or no")


set var ynsnmpdisable $READ("Disable SNMP v1/v2 access? yes or no")


set var ynsnmpcommadd $READ("Add SNMP v1/v2 communities? yes or no")


set var snmprwname $READ("Read/Write SNMP Community Name?")


set var snmproname $READ("Read-Only SNMP Community Name?")


set var ynsnmpcommrem $READ("Remove default SNMP Communities? yes or no")


set var snmpname $READ("SNMP Switch Name?")


set var snmplocation $READ("SNMP Location? Encapsulate in double quotes e.g. "TS Room 5"")


set var snmpcontact $READ("SNMP Contact? Encapsulate in double quotes e.g. "John Q. Noc Guy"")


set var snmptrapcount $READ("Number of SNMP Trap Receivers, script supports: 1, 2 or 3")

if ($snmptrapcount == 1) then
set var snmptrap1 $READ("SNMP Trap Receiver #1 e.g. 10.10.10.10")
endif
if ($snmptrapcount == 2) then
set var snmptrap1 $READ("SNMP Trap Receiver #1 e.g. 10.10.10.10")
set var snmptrap2 $READ("SNMP Trap Receiver #2 e.g. 10.10.10.11")
endif
if ($snmptrapcount == 3) then
set var snmptrap1 $READ("SNMP Trap Receiver #1 e.g. 10.10.10.10")
set var snmptrap2 $READ("SNMP Trap Receiver #2 e.g. 10.10.10.11")
set var snmptrap3 $READ("SNMP Trap Receiver #3 e.g. 10.10.10.12")
endif
# @MetaDataEnd

#############################################################################
# SNMP V1/V2 Configuration
#############################################################################

if (!$match($clierrormode,ignore)) then
  configure cli mode scripting ignore-error
  create log entry "CLI mode set for Ignore on Error"
else
  configure cli mode scripting abort-on-error
  create log entry "CLI mode set for Abort on Error"
endif

if (!$match($ynsnmpconfig,yes)) then
  create log entry "Starting SNMP Configuration"

  configure snmp sysName "$(snmpname)"
  configure snmp sysLocation "$(snmplocation)"
  configure snmp sysContact "$(snmpcontact)"

  if ($snmptrapcount >= 1) then 
    configure snmp add trapreceiver $snmptrap1 community $snmproname
  endif
  if ($snmptrapcount >= 2) then 
    configure snmp add trapreceiver $snmptrap2 community $snmproname
  endif
  if ($snmptrapcount >= 3) then 
    configure snmp add trapreceiver $snmptrap3 community $snmproname
  endif

  if (!$match($ynsnmpcommadd,yes)) then
    configure snmp add community readwrite $snmprwname
    configure snmp add community readonly $snmproname
    create log entry "New SNMP Communities Created"
  endif

  if (!$match($ynsnmpcommrem,yes)) then 
    configure snmp delete community readwrite private
    configure snmp delete community readonly public
    create log entry "Default SNMP Communities Removed"
  else
    create log entry "Default SNMP Communities NOT Removed"
  endif

else

  if (!$match($ynsnmpdisable,yes)) then
    create log entry "Disabling SNMP access"
    disable snmp access snmp-v1v2
  else
    create log entry "SNMP Not Configured"
  endif

endif

disable cli scripting