enable cli scripting
disable clip

# @METADATASTART
#@DetailDescriptionStart
###############################################################################
#
# Script        : RADIUSMgmtConfig
# Revision      : 1.2
# Last Updated  : April 4, 2008
#
# Purpose:  This script provides an example of configuring an ExtremeXOS(TM) 
#           switch with RADIUS managment information.  Specifically,
#
#           1.  RADIUS server and client IP addresses
#           2.  RADIUS server password and encryption specification
#           3.  Enable RADIUS server managment access
#
# Note:  The RADIUS Client IP address must be configured in specified 
#        virtual router name (vr-default) for this script to execute 
#        properly.
#
###############################################################################
#@DetailDescriptionEnd

###############################################################################
# RADIUS Variable definitions
###############################################################################
# Change Log
# - Added READ commands and removed Ridgeline style annotations for EXOS Use.
#

set var ynradiusmgmt $READ("Configure And Enable RADIUS For Switch Management? answer yes or no")

set var ynradsecretmgmt $READ("Is The RADIUS Server Shared Secret Encrypted answer yes or no")


set var radservermgmt $READ("RADIUS Server IP Address e.g. 10.10.10.144")

set var radclientmgmt $READ("RADIUS Client IP Address. Script will error if IP is not in network.")

set var vrname $READ("RADIUS Client IP Address Virtual Router Name vr-default or vr-mgmt")

set var radsecretmgmt $READ("RADIUS Server Shared Secret Password. Note this is not stored or saved in the script only encrypted at rest in the configuration file.")


# @MetaDataEnd

###############################################################################
# RADIUS MGMT ACCESS
###############################################################################

if (!$match($ynradiusmgmt,yes)) then
  create log entry "Configuring RADIUS Switch Management"
  configure radius mgmt-access primary server $radservermgmt client-ip $radclientmgmt vr $vrname
 
  if (!$match($ynradsecretmgmt,yes)) then
    configure radius mgmt-access primary shared-secret encrypted $radsecretmgmt
    create log entry "RADIUS management secret encryted"
  else
    configure radius mgmt-access primary shared-secret $radsecretmgmt
    create log entry "RADIUS managment secret not encrypted"
  endif

  enable radius mgmt-access
  create log entry "RADIUS Switch Management Configuration Complete and Enabled"
else
  create log entry "RADIUS Switch Managment Not Configured"
endif 

disable cli scripting
